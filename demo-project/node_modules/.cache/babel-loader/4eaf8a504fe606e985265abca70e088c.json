{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akku6\\\\Desktop\\\\React\\\\demo-project\\\\src\\\\components\\\\SetState.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SetState extends Component {\n  constructor() {\n    super(); // intializing state\n\n    this.state = {\n      message: 'Hello Visitor',\n      count: 0\n    };\n  }\n  /* incorrect way of changing state value by direct change,\r\n  it's not change value on UI\r\n  \r\n  changeMessage() {\r\n      this.state.message : 'Thank you for subscribing'\r\n  }\r\n  */\n  // passing object to setState\n\n\n  changeMessage() {\n    this.setState({\n      message: 'Thank you for subscribing'\n    });\n  } // passing aero function to setState using previous state(proper way)\n\n\n  increment() {\n    this.setState(prevState => ({\n      count: prevState.count + 1\n    }), () => console.log(this.state.count)); // for update any thing after change state value use the callback function \n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.changeMessage(),\n        children: \"Subcribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Count - \", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.increment(),\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SetState;","map":{"version":3,"sources":["C:/Users/akku6/Desktop/React/demo-project/src/components/SetState.js"],"names":["React","Component","SetState","constructor","state","message","count","changeMessage","setState","increment","prevState","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAE7BE,EAAAA,WAAW,GAAE;AACT,YADS,CAET;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAG,eADD;AAETC,MAAAA,KAAK,EAAG;AAFC,KAAb;AAIH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AAEI;;;AACAC,EAAAA,aAAa,GAAG;AACZ,SAAKC,QAAL,CAAc;AACVH,MAAAA,OAAO,EAAG;AADA,KAAd;AAGH,GAxB4B,CA0B7B;;;AACAI,EAAAA,SAAS,GAAE;AACP,SAAKD,QAAL,CAAeE,SAAD,KAAgB;AAC1BJ,MAAAA,KAAK,EAAGI,SAAS,CAACJ,KAAV,GAAkB;AADA,KAAhB,CAAd,EAEI,MAAMK,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWE,KAAvB,CAFV,EADO,CAGmC;AAC7C;;AAEDO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,kBAAK,KAAKT,KAAL,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKE,aAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI;AAAA,+BAAa,KAAKH,KAAL,CAAWE,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAOI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKG,SAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA7C4B;;AAgDjC,eAAeP,QAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass SetState extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        // intializing state\r\n        this.state = {\r\n            message : 'Hello Visitor',\r\n            count : 0\r\n        }\r\n    }\r\n\r\n    /* incorrect way of changing state value by direct change,\r\n    it's not change value on UI\r\n    \r\n    changeMessage() {\r\n        this.state.message : 'Thank you for subscribing'\r\n    }\r\n    */\r\n\r\n    // passing object to setState\r\n    changeMessage() {\r\n        this.setState({\r\n            message : 'Thank you for subscribing'\r\n        })\r\n    }\r\n\r\n    // passing aero function to setState using previous state(proper way)\r\n    increment(){\r\n        this.setState((prevState) => ({\r\n            count : prevState.count + 1\r\n        }), () => console.log(this.state.count))  // for update any thing after change state value use the callback function \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div> \r\n                <h3>{this.state.message}</h3>\r\n                {/* changing text on button click */}\r\n                <button onClick={() => this.changeMessage()}>Subcribe</button>\r\n\r\n                <h3>Count - {this.state.count}</h3>\r\n                {/* increment count value on button click */}\r\n                <button onClick={() => this.increment()}>Increment</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SetState\r\n"]},"metadata":{},"sourceType":"module"}